"use strict";
/**
 * SPDX-License-Identifier: Apache-2.0
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.IdentityConverter = void 0;
const uuid = require("uuid");
const hsmType = "HSM-X.509";
const x509Type = "X.509";
class IdentityConverter {
    userToStoreData(user, privateKey) {
        return {
            type: privateKey ? x509Type : hsmType,
            version: 1,
            mspId: user.mspid,
            credentials: {
                certificate: user.enrollment.identity.certificate,
                privateKey
            }
        };
    }
    storeDataToUser(storeData, label) {
        if (storeData.type !== x509Type) {
            throw new Error("Invalid identity type: " + storeData.type);
        }
        const user = {
            name: label,
            mspid: storeData.mspId,
            enrollment: {
                identity: {
                    certificate: storeData.credentials.certificate,
                },
                signingIdentity: uuid.v4()
            }
        };
        const privateKey = storeData.credentials.privateKey;
        return { user, privateKey };
    }
}
exports.IdentityConverter = IdentityConverter;
//# sourceMappingURL=IdentityConverter.js.map